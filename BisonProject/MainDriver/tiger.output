Terminals unused in grammar

   INT
   SEMICOLON
   TYPE
   LE
   GE
   LT
   GT
   NEQ
   OR
   AND


State 4 conflicts: 2 shift/reduce
State 24 conflicts: 1 shift/reduce
State 86 conflicts: 6 shift/reduce
State 87 conflicts: 5 shift/reduce
State 116 conflicts: 5 shift/reduce
State 117 conflicts: 5 shift/reduce
State 130 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program line

    3 line: NEWLINE
    4     | exp NEWLINE
    5     | error NEWLINE

    6 exp: STRING
    7    | NUMBER
    8    | NIL
    9    | lvalue
   10    | exp PLUS exp
   11    | exp MINUS exp
   12    | exp TIMES exp
   13    | exp DIVIDE exp
   14    | LPAREN exp RPAREN
   15    | exp POWER exp
   16    | MINUS exp
   17    | ID LPAREN expr-list RPAREN
   18    | ID LPAREN RPAREN
   19    | LPAREN expr-seq RPAREN
   20    | LPAREN RPAREN
   21    | ID LBRACK field-list RBRACK
   22    | ID LBRACK RBRACK
   23    | ID LBRACE exp RBRACE OF exp
   24    | IF exp THEN exp
   25    | IF exp THEN exp ELSE exp
   26    | WHILE exp DO exp
   27    | FOR ID ASSIGN exp TO exp DO exp
   28    | BREAK
   29    | LET declaration-list IN expr-seq END
   30    | LET declaration-list IN END

   31 expr-seq: exp
   32         | expr-seq COLON exp

   33 expr-list: exp
   34          | expr-list COMMA exp

   35 field-list: ID EQ exp
   36           | field-list COMMA ID EQ exp

   37 lvalue: ID
   38       | lvalue DOT ID
   39       | lvalue LBRACE exp RBRACE

   40 declaration-list: declaration
   41                 | declaration-list declaration

   42 declaration: type-declaration
   43            | variable-declaration
   44            | function-declaration

   45 type-declaration: type ID EQ type

   46 type: ID
   47     | LBRACK type-fields RBRACK
   48     | LBRACK RBRACK
   49     | ARRAY OF ID

   50 type-fields: type-field
   51            | type-field COMMA type-field

   52 type-field: ID COLON ID

   53 variable-declaration: VAR ID ASSIGN exp
   54                     | VAR ID COLON ID ASSIGN exp

   55 function-declaration: FUNCTION ID LPAREN type-fields RPAREN EQ exp
   56                     | FUNCTION ID LPAREN RPAREN EQ exp
   57                     | FUNCTION ID LPAREN type-fields RPAREN COLON ID EQ exp
   58                     | FUNCTION ID LPAREN RPAREN COLON ID EQ exp


Terminals, with rules where they appear

$end (0) 0
error (256) 5
ID (258) 17 18 21 22 23 27 35 36 37 38 45 46 49 52 53 54 55 56 57 58
STRING (259) 6
INT (260)
COMMA (261) 34 36 51
COLON (262) 32 52 54 57 58
SEMICOLON (263)
LPAREN (264) 14 17 18 19 20 55 56 57 58
RPAREN (265) 14 17 18 19 20 55 56 57 58
LBRACK (266) 21 22 47 48
RBRACK (267) 21 22 47 48
LBRACE (268) 23 39
RBRACE (269) 23 39
DOT (270) 38
ARRAY (271) 49
IF (272) 24 25
THEN (273) 24 25
ELSE (274) 25
WHILE (275) 26
FOR (276) 27
TO (277) 27
DO (278) 26 27
LET (279) 29 30
IN (280) 29 30
END (281) 29 30
OF (282) 23 49
BREAK (283) 28
NIL (284) 8
FUNCTION (285) 55 56 57 58
VAR (286) 53 54
TYPE (287)
NEWLINE (288) 3 4 5
NUMBER (289) 7
MINUS (290) 11 16
PLUS (291) 10
DIVIDE (292) 13
TIMES (293) 12
LE (294)
GE (295)
LT (296)
GT (297)
NEQ (298)
EQ (299) 35 36 45 55 56 57 58
OR (300)
AND (301)
ASSIGN (302) 27 53 54
UMINUS (303)
POWER (304) 15


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1 2, on right: 0 2
line (52)
    on left: 3 4 5, on right: 2
exp (53)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28 29 30, on right: 4 10 11 12 13 14 15 16 23 24 25 26 27
    31 32 33 34 35 36 39 53 54 55 56 57 58
expr-seq (54)
    on left: 31 32, on right: 19 29 32
expr-list (55)
    on left: 33 34, on right: 17 34
field-list (56)
    on left: 35 36, on right: 21 36
lvalue (57)
    on left: 37 38 39, on right: 9 38 39
declaration-list (58)
    on left: 40 41, on right: 29 30 41
declaration (59)
    on left: 42 43 44, on right: 40 41
type-declaration (60)
    on left: 45, on right: 42
type (61)
    on left: 46 47 48 49, on right: 45
type-fields (62)
    on left: 50 51, on right: 47 55 57
type-field (63)
    on left: 52, on right: 50 51
variable-declaration (64)
    on left: 53 54, on right: 43
function-declaration (65)
    on left: 55 56 57 58, on right: 44


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . line

    $end     shift, and go to state 2
    error    shift, and go to state 3
    ID       shift, and go to state 4
    STRING   shift, and go to state 5
    LPAREN   shift, and go to state 6
    IF       shift, and go to state 7
    WHILE    shift, and go to state 8
    FOR      shift, and go to state 9
    LET      shift, and go to state 10
    BREAK    shift, and go to state 11
    NIL      shift, and go to state 12
    NEWLINE  shift, and go to state 13
    NUMBER   shift, and go to state 14
    MINUS    shift, and go to state 15

    line    go to state 16
    exp     go to state 17
    lvalue  go to state 18


State 2

    0 $accept: program $end .

    $default  accept


State 3

    5 line: error . NEWLINE

    NEWLINE  shift, and go to state 19


State 4

   17 exp: ID . LPAREN expr-list RPAREN
   18    | ID . LPAREN RPAREN
   21    | ID . LBRACK field-list RBRACK
   22    | ID . LBRACK RBRACK
   23    | ID . LBRACE exp RBRACE OF exp
   37 lvalue: ID .

    LPAREN  shift, and go to state 20
    LBRACK  shift, and go to state 21
    LBRACE  shift, and go to state 22

    LBRACK    [reduce using rule 37 (lvalue)]
    LBRACE    [reduce using rule 37 (lvalue)]
    $default  reduce using rule 37 (lvalue)


State 5

    6 exp: STRING .

    $default  reduce using rule 6 (exp)


State 6

   14 exp: LPAREN . exp RPAREN
   19    | LPAREN . expr-seq RPAREN
   20    | LPAREN . RPAREN

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    RPAREN  shift, and go to state 23
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp       go to state 24
    expr-seq  go to state 25
    lvalue    go to state 18


State 7

   24 exp: IF . exp THEN exp
   25    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 26
    lvalue  go to state 18


State 8

   26 exp: WHILE . exp DO exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 27
    lvalue  go to state 18


State 9

   27 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 28


State 10

   29 exp: LET . declaration-list IN expr-seq END
   30    | LET . declaration-list IN END

    ID        shift, and go to state 29
    LBRACK    shift, and go to state 30
    ARRAY     shift, and go to state 31
    FUNCTION  shift, and go to state 32
    VAR       shift, and go to state 33

    declaration-list      go to state 34
    declaration           go to state 35
    type-declaration      go to state 36
    type                  go to state 37
    variable-declaration  go to state 38
    function-declaration  go to state 39


State 11

   28 exp: BREAK .

    $default  reduce using rule 28 (exp)


State 12

    8 exp: NIL .

    $default  reduce using rule 8 (exp)


State 13

    3 line: NEWLINE .

    $default  reduce using rule 3 (line)


State 14

    7 exp: NUMBER .

    $default  reduce using rule 7 (exp)


State 15

   16 exp: MINUS . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 40
    lvalue  go to state 18


State 16

    2 program: program line .

    $default  reduce using rule 2 (program)


State 17

    4 line: exp . NEWLINE
   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp

    NEWLINE  shift, and go to state 41
    MINUS    shift, and go to state 42
    PLUS     shift, and go to state 43
    DIVIDE   shift, and go to state 44
    TIMES    shift, and go to state 45
    POWER    shift, and go to state 46


State 18

    9 exp: lvalue .
   38 lvalue: lvalue . DOT ID
   39       | lvalue . LBRACE exp RBRACE

    LBRACE  shift, and go to state 47
    DOT     shift, and go to state 48

    $default  reduce using rule 9 (exp)


State 19

    5 line: error NEWLINE .

    $default  reduce using rule 5 (line)


State 20

   17 exp: ID LPAREN . expr-list RPAREN
   18    | ID LPAREN . RPAREN

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    RPAREN  shift, and go to state 49
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp        go to state 50
    expr-list  go to state 51
    lvalue     go to state 18


State 21

   21 exp: ID LBRACK . field-list RBRACK
   22    | ID LBRACK . RBRACK

    ID      shift, and go to state 52
    RBRACK  shift, and go to state 53

    field-list  go to state 54


State 22

   23 exp: ID LBRACE . exp RBRACE OF exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 55
    lvalue  go to state 18


State 23

   20 exp: LPAREN RPAREN .

    $default  reduce using rule 20 (exp)


State 24

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | LPAREN exp . RPAREN
   15    | exp . POWER exp
   31 expr-seq: exp .

    RPAREN  shift, and go to state 56
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    RPAREN    [reduce using rule 31 (expr-seq)]
    $default  reduce using rule 31 (expr-seq)


State 25

   19 exp: LPAREN expr-seq . RPAREN
   32 expr-seq: expr-seq . COLON exp

    COLON   shift, and go to state 57
    RPAREN  shift, and go to state 58


State 26

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   24    | IF exp . THEN exp
   25    | IF exp . THEN exp ELSE exp

    THEN    shift, and go to state 59
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46


State 27

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   26    | WHILE exp . DO exp

    DO      shift, and go to state 60
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46


State 28

   27 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 61


State 29

   46 type: ID .

    $default  reduce using rule 46 (type)


State 30

   47 type: LBRACK . type-fields RBRACK
   48     | LBRACK . RBRACK

    ID      shift, and go to state 62
    RBRACK  shift, and go to state 63

    type-fields  go to state 64
    type-field   go to state 65


State 31

   49 type: ARRAY . OF ID

    OF  shift, and go to state 66


State 32

   55 function-declaration: FUNCTION . ID LPAREN type-fields RPAREN EQ exp
   56                     | FUNCTION . ID LPAREN RPAREN EQ exp
   57                     | FUNCTION . ID LPAREN type-fields RPAREN COLON ID EQ exp
   58                     | FUNCTION . ID LPAREN RPAREN COLON ID EQ exp

    ID  shift, and go to state 67


State 33

   53 variable-declaration: VAR . ID ASSIGN exp
   54                     | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 68


State 34

   29 exp: LET declaration-list . IN expr-seq END
   30    | LET declaration-list . IN END
   41 declaration-list: declaration-list . declaration

    ID        shift, and go to state 29
    LBRACK    shift, and go to state 30
    ARRAY     shift, and go to state 31
    IN        shift, and go to state 69
    FUNCTION  shift, and go to state 32
    VAR       shift, and go to state 33

    declaration           go to state 70
    type-declaration      go to state 36
    type                  go to state 37
    variable-declaration  go to state 38
    function-declaration  go to state 39


State 35

   40 declaration-list: declaration .

    $default  reduce using rule 40 (declaration-list)


State 36

   42 declaration: type-declaration .

    $default  reduce using rule 42 (declaration)


State 37

   45 type-declaration: type . ID EQ type

    ID  shift, and go to state 71


State 38

   43 declaration: variable-declaration .

    $default  reduce using rule 43 (declaration)


State 39

   44 declaration: function-declaration .

    $default  reduce using rule 44 (declaration)


State 40

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   16    | MINUS exp .

    POWER  shift, and go to state 46

    $default  reduce using rule 16 (exp)


State 41

    4 line: exp NEWLINE .

    $default  reduce using rule 4 (line)


State 42

   11 exp: exp MINUS . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 72
    lvalue  go to state 18


State 43

   10 exp: exp PLUS . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 73
    lvalue  go to state 18


State 44

   13 exp: exp DIVIDE . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 74
    lvalue  go to state 18


State 45

   12 exp: exp TIMES . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 75
    lvalue  go to state 18


State 46

   15 exp: exp POWER . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 76
    lvalue  go to state 18


State 47

   39 lvalue: lvalue LBRACE . exp RBRACE

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 77
    lvalue  go to state 18


State 48

   38 lvalue: lvalue DOT . ID

    ID  shift, and go to state 78


State 49

   18 exp: ID LPAREN RPAREN .

    $default  reduce using rule 18 (exp)


State 50

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   33 expr-list: exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    $default  reduce using rule 33 (expr-list)


State 51

   17 exp: ID LPAREN expr-list . RPAREN
   34 expr-list: expr-list . COMMA exp

    COMMA   shift, and go to state 79
    RPAREN  shift, and go to state 80


State 52

   35 field-list: ID . EQ exp

    EQ  shift, and go to state 81


State 53

   22 exp: ID LBRACK RBRACK .

    $default  reduce using rule 22 (exp)


State 54

   21 exp: ID LBRACK field-list . RBRACK
   36 field-list: field-list . COMMA ID EQ exp

    COMMA   shift, and go to state 82
    RBRACK  shift, and go to state 83


State 55

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   23    | ID LBRACE exp . RBRACE OF exp

    RBRACE  shift, and go to state 84
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46


State 56

   14 exp: LPAREN exp RPAREN .

    $default  reduce using rule 14 (exp)


State 57

   32 expr-seq: expr-seq COLON . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 85
    lvalue  go to state 18


State 58

   19 exp: LPAREN expr-seq RPAREN .

    $default  reduce using rule 19 (exp)


State 59

   24 exp: IF exp THEN . exp
   25    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 86
    lvalue  go to state 18


State 60

   26 exp: WHILE exp DO . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 87
    lvalue  go to state 18


State 61

   27 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 88
    lvalue  go to state 18


State 62

   52 type-field: ID . COLON ID

    COLON  shift, and go to state 89


State 63

   48 type: LBRACK RBRACK .

    $default  reduce using rule 48 (type)


State 64

   47 type: LBRACK type-fields . RBRACK

    RBRACK  shift, and go to state 90


State 65

   50 type-fields: type-field .
   51            | type-field . COMMA type-field

    COMMA  shift, and go to state 91

    $default  reduce using rule 50 (type-fields)


State 66

   49 type: ARRAY OF . ID

    ID  shift, and go to state 92


State 67

   55 function-declaration: FUNCTION ID . LPAREN type-fields RPAREN EQ exp
   56                     | FUNCTION ID . LPAREN RPAREN EQ exp
   57                     | FUNCTION ID . LPAREN type-fields RPAREN COLON ID EQ exp
   58                     | FUNCTION ID . LPAREN RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 93


State 68

   53 variable-declaration: VAR ID . ASSIGN exp
   54                     | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 94
    ASSIGN  shift, and go to state 95


State 69

   29 exp: LET declaration-list IN . expr-seq END
   30    | LET declaration-list IN . END

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    END     shift, and go to state 96
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp       go to state 97
    expr-seq  go to state 98
    lvalue    go to state 18


State 70

   41 declaration-list: declaration-list declaration .

    $default  reduce using rule 41 (declaration-list)


State 71

   45 type-declaration: type ID . EQ type

    EQ  shift, and go to state 99


State 72

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   11    | exp MINUS exp .
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp

    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    $default  reduce using rule 11 (exp)


State 73

   10 exp: exp . PLUS exp
   10    | exp PLUS exp .
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp

    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    $default  reduce using rule 10 (exp)


State 74

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   13    | exp DIVIDE exp .
   15    | exp . POWER exp

    POWER  shift, and go to state 46

    $default  reduce using rule 13 (exp)


State 75

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   12    | exp TIMES exp .
   13    | exp . DIVIDE exp
   15    | exp . POWER exp

    POWER  shift, and go to state 46

    $default  reduce using rule 12 (exp)


State 76

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   15    | exp POWER exp .

    POWER  shift, and go to state 46

    $default  reduce using rule 15 (exp)


State 77

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   39 lvalue: lvalue LBRACE exp . RBRACE

    RBRACE  shift, and go to state 100
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46


State 78

   38 lvalue: lvalue DOT ID .

    $default  reduce using rule 38 (lvalue)


State 79

   34 expr-list: expr-list COMMA . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 101
    lvalue  go to state 18


State 80

   17 exp: ID LPAREN expr-list RPAREN .

    $default  reduce using rule 17 (exp)


State 81

   35 field-list: ID EQ . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 102
    lvalue  go to state 18


State 82

   36 field-list: field-list COMMA . ID EQ exp

    ID  shift, and go to state 103


State 83

   21 exp: ID LBRACK field-list RBRACK .

    $default  reduce using rule 21 (exp)


State 84

   23 exp: ID LBRACE exp RBRACE . OF exp

    OF  shift, and go to state 104


State 85

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   32 expr-seq: expr-seq COLON exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    $default  reduce using rule 32 (expr-seq)


State 86

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   24    | IF exp THEN exp .
   25    | IF exp THEN exp . ELSE exp

    ELSE    shift, and go to state 105
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    ELSE      [reduce using rule 24 (exp)]
    MINUS     [reduce using rule 24 (exp)]
    PLUS      [reduce using rule 24 (exp)]
    DIVIDE    [reduce using rule 24 (exp)]
    TIMES     [reduce using rule 24 (exp)]
    POWER     [reduce using rule 24 (exp)]
    $default  reduce using rule 24 (exp)


State 87

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   26    | WHILE exp DO exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    MINUS     [reduce using rule 26 (exp)]
    PLUS      [reduce using rule 26 (exp)]
    DIVIDE    [reduce using rule 26 (exp)]
    TIMES     [reduce using rule 26 (exp)]
    POWER     [reduce using rule 26 (exp)]
    $default  reduce using rule 26 (exp)


State 88

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   27    | FOR ID ASSIGN exp . TO exp DO exp

    TO      shift, and go to state 106
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46


State 89

   52 type-field: ID COLON . ID

    ID  shift, and go to state 107


State 90

   47 type: LBRACK type-fields RBRACK .

    $default  reduce using rule 47 (type)


State 91

   51 type-fields: type-field COMMA . type-field

    ID  shift, and go to state 62

    type-field  go to state 108


State 92

   49 type: ARRAY OF ID .

    $default  reduce using rule 49 (type)


State 93

   55 function-declaration: FUNCTION ID LPAREN . type-fields RPAREN EQ exp
   56                     | FUNCTION ID LPAREN . RPAREN EQ exp
   57                     | FUNCTION ID LPAREN . type-fields RPAREN COLON ID EQ exp
   58                     | FUNCTION ID LPAREN . RPAREN COLON ID EQ exp

    ID      shift, and go to state 62
    RPAREN  shift, and go to state 109

    type-fields  go to state 110
    type-field   go to state 65


State 94

   54 variable-declaration: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 111


State 95

   53 variable-declaration: VAR ID ASSIGN . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 112
    lvalue  go to state 18


State 96

   30 exp: LET declaration-list IN END .

    $default  reduce using rule 30 (exp)


State 97

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   31 expr-seq: exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    $default  reduce using rule 31 (expr-seq)


State 98

   29 exp: LET declaration-list IN expr-seq . END
   32 expr-seq: expr-seq . COLON exp

    COLON  shift, and go to state 57
    END    shift, and go to state 113


State 99

   45 type-declaration: type ID EQ . type

    ID      shift, and go to state 29
    LBRACK  shift, and go to state 30
    ARRAY   shift, and go to state 31

    type  go to state 114


State 100

   39 lvalue: lvalue LBRACE exp RBRACE .

    $default  reduce using rule 39 (lvalue)


State 101

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   34 expr-list: expr-list COMMA exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    $default  reduce using rule 34 (expr-list)


State 102

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   35 field-list: ID EQ exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    $default  reduce using rule 35 (field-list)


State 103

   36 field-list: field-list COMMA ID . EQ exp

    EQ  shift, and go to state 115


State 104

   23 exp: ID LBRACE exp RBRACE OF . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 116
    lvalue  go to state 18


State 105

   25 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 117
    lvalue  go to state 18


State 106

   27 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 118
    lvalue  go to state 18


State 107

   52 type-field: ID COLON ID .

    $default  reduce using rule 52 (type-field)


State 108

   51 type-fields: type-field COMMA type-field .

    $default  reduce using rule 51 (type-fields)


State 109

   56 function-declaration: FUNCTION ID LPAREN RPAREN . EQ exp
   58                     | FUNCTION ID LPAREN RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 119
    EQ     shift, and go to state 120


State 110

   55 function-declaration: FUNCTION ID LPAREN type-fields . RPAREN EQ exp
   57                     | FUNCTION ID LPAREN type-fields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 121


State 111

   54 variable-declaration: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 122


State 112

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   53 variable-declaration: VAR ID ASSIGN exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    $default  reduce using rule 53 (variable-declaration)


State 113

   29 exp: LET declaration-list IN expr-seq END .

    $default  reduce using rule 29 (exp)


State 114

   45 type-declaration: type ID EQ type .

    $default  reduce using rule 45 (type-declaration)


State 115

   36 field-list: field-list COMMA ID EQ . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 123
    lvalue  go to state 18


State 116

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   23    | ID LBRACE exp RBRACE OF exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    MINUS     [reduce using rule 23 (exp)]
    PLUS      [reduce using rule 23 (exp)]
    DIVIDE    [reduce using rule 23 (exp)]
    TIMES     [reduce using rule 23 (exp)]
    POWER     [reduce using rule 23 (exp)]
    $default  reduce using rule 23 (exp)


State 117

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   25    | IF exp THEN exp ELSE exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    MINUS     [reduce using rule 25 (exp)]
    PLUS      [reduce using rule 25 (exp)]
    DIVIDE    [reduce using rule 25 (exp)]
    TIMES     [reduce using rule 25 (exp)]
    POWER     [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


State 118

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   27    | FOR ID ASSIGN exp TO exp . DO exp

    DO      shift, and go to state 124
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46


State 119

   58 function-declaration: FUNCTION ID LPAREN RPAREN COLON . ID EQ exp

    ID  shift, and go to state 125


State 120

   56 function-declaration: FUNCTION ID LPAREN RPAREN EQ . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 126
    lvalue  go to state 18


State 121

   55 function-declaration: FUNCTION ID LPAREN type-fields RPAREN . EQ exp
   57                     | FUNCTION ID LPAREN type-fields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 127
    EQ     shift, and go to state 128


State 122

   54 variable-declaration: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 129
    lvalue  go to state 18


State 123

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   36 field-list: field-list COMMA ID EQ exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    $default  reduce using rule 36 (field-list)


State 124

   27 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 130
    lvalue  go to state 18


State 125

   58 function-declaration: FUNCTION ID LPAREN RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 131


State 126

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   56 function-declaration: FUNCTION ID LPAREN RPAREN EQ exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    $default  reduce using rule 56 (function-declaration)


State 127

   57 function-declaration: FUNCTION ID LPAREN type-fields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 132


State 128

   55 function-declaration: FUNCTION ID LPAREN type-fields RPAREN EQ . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 133
    lvalue  go to state 18


State 129

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   54 variable-declaration: VAR ID COLON ID ASSIGN exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    $default  reduce using rule 54 (variable-declaration)


State 130

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   27    | FOR ID ASSIGN exp TO exp DO exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    MINUS     [reduce using rule 27 (exp)]
    PLUS      [reduce using rule 27 (exp)]
    DIVIDE    [reduce using rule 27 (exp)]
    TIMES     [reduce using rule 27 (exp)]
    POWER     [reduce using rule 27 (exp)]
    $default  reduce using rule 27 (exp)


State 131

   58 function-declaration: FUNCTION ID LPAREN RPAREN COLON ID EQ . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 134
    lvalue  go to state 18


State 132

   57 function-declaration: FUNCTION ID LPAREN type-fields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 135


State 133

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   55 function-declaration: FUNCTION ID LPAREN type-fields RPAREN EQ exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    $default  reduce using rule 55 (function-declaration)


State 134

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   58 function-declaration: FUNCTION ID LPAREN RPAREN COLON ID EQ exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    $default  reduce using rule 58 (function-declaration)


State 135

   57 function-declaration: FUNCTION ID LPAREN type-fields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12
    NUMBER  shift, and go to state 14
    MINUS   shift, and go to state 15

    exp     go to state 136
    lvalue  go to state 18


State 136

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . POWER exp
   57 function-declaration: FUNCTION ID LPAREN type-fields RPAREN COLON ID EQ exp .

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45
    POWER   shift, and go to state 46

    $default  reduce using rule 57 (function-declaration)
